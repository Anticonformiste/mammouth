# [PackageDev] target_format: plist, ext: tmLanguage
---
name: Mammouth
scopeName: source.mammouth
fileTypes: [mammouth]
uuid: 4341ee97-4eee-47f3-84c3-416c661e7096

patterns:
- begin: '{{'
  end: '}}'
  patterns:
  - include: '#language'
- include: 'text.html.basic'

#######################################

# mammouth language
repository:
  language:
    patterns:
    # comment
    - match: "#.*"
      name: comment.line.number-sign.mammouth
    - match: "###[^#].*?(?:###[^\n]*|###$)"
      name: comment.block.mammouth
    # String
    - name: string.quoted.double.untitled
      begin: '"'
      end: '"'
    - name: string.quoted.double.untitled
      begin: "'"
      end: "'"
    # boolean
    - name: constant.language.mammouth
      match: "true|false|null"
    # numbers
    - name: constant.numeric.mammouth
      match: \b(0b[01]+|0o[0-7]+|0(x|X)[\da-fA-F]+|\d+\.?\d+(?:(e|E)[+-]?\d+)?)\b
    # Symbols
    - name: keyword.operator.mammouth
      match: ([-+*/%=^||~]|\.|\?)
    # reserved names
    - name: keyword.control.mammouth
      match: \b(abstract|and|as|break|by|catch|case|class|const|continue|cte|declare|delete|else|extends|final|finally|for|func|goto|if|implements|in|instanceof|interface|include|isnt|loop|namespace|new|not|null|of|once|or|private|protected|public|require|return|static|switch|then|throw|try|unless|until|use|when|while)\b
    - name: support.function.construct.mammouth
      match: \b(echo|print)\b
    - name: storage.type.mammouth
      match: \b(clone)\b
    # function keyword
    - match: (func)(\s+)(([^()>+\*/ -]+)?)
      captures:
        '1':
          name: storage.type.mammouth
        '3':
          name: entity.name.function.mammouth
    # function symbol
    - match: ((\([^()]*\))?)((\s*)?)(->)
      captures:
        '1':
          name: variable.parameter.mammouth
        '5':
          name: storage.type.mammouth
...