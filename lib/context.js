// Generated by CoffeeScript 1.7.1
(function() {
  var Context, PreContext;

  exports.Context = Context = (function() {
    function Context(element) {
      this.scopes = [];
      this.scopes.unshift(element);
    }

    Context.prototype.push = function(iden) {
      this.scopes[0][iden.name] = {};
      this.scopes[0][iden.name].name = iden.name;
      return this.scopes[0][iden.name].type = iden.type;
    };

    Context.prototype.scopein = function() {
      return this.scopes.unshift({});
    };

    Context.prototype.scopeout = function() {
      return this.scopes.shift();
    };

    Context.prototype.Identify = function(name) {
      var scope, _i, _len, _ref, _ref1;
      _ref = this.scopes;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        scope = _ref[_i];
        if (scope[name] !== void 0) {
          if ((_ref1 = scope[name].type) === 'function' || _ref1 === 'cte' || _ref1 === 'class' || _ref1 === 'interface') {
            return name;
          } else {
            return '$' + name;
          }
        }
      }
      return '$' + name;
    };

    return Context;

  })();

  PreContext = exports.PreContext = new Context({
    'call_​user_​func_​array': {
      'type': 'function'
    },
    'call_user_func': {
      'type': 'function'
    },
    'create_function': {
      'type': 'function'
    },
    'forward_static_call_array': {
      'type': 'function'
    },
    'forward_static_call': {
      'type': 'function'
    },
    'func_get_arg': {
      'type': 'function'
    },
    'func_get_args': {
      'type': 'function'
    },
    'func_num_args': {
      'type': 'function'
    },
    'function_exists': {
      'type': 'function'
    },
    'get_defined_functions': {
      'type': 'function'
    },
    'register_shutdown_function': {
      'type': 'function'
    },
    'register_tick_function': {
      'type': 'function'
    },
    'unregister_tick_function': {
      'type': 'function'
    }
  });

}).call(this);
