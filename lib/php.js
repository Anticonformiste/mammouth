// Generated by CoffeeScript 1.10.0
(function() {
  var Context, lexer;

  lexer = require('./phplexer');

  Context = require('./context');

  module.exports = {
    compile: function(code, system) {
      var i, j, len, token, token2, token3, tokens;
      lexer.setInput(code);
      tokens = lexer.tokenize();
      for (i = j = 0, len = tokens.length; j < len; i = ++j) {
        token = tokens[i];
        if (token.type === 'VARIABLENAME') {
          system.context.push(new Context.Name(token.value));
        }
        if (token.type === 'NAME') {
          if (tokens[i - 1] != null) {
            token2 = tokens[i - 1];
            if (token2.type === 'FUNCTION') {
              system.context.push(new Context.Name(token.value, 'function'));
            }
            if (token2.type === 'CLASS') {
              system.context.push(new Context.Name(token.value, 'class'));
            }
            if (token2.type === 'INTERFACE') {
              system.context.push(new Context.Name(token.value, 'interface'));
            }
            if (token2.type === 'CONST') {
              system.context.push(new Context.Name(token.value, 'const'));
            }
          }
        }
        if (token.type === 'STRING') {
          if ((tokens[i - 1] != null) && (tokens[i - 2] != null) && tokens[i - 1].type === '(') {
            token3 = tokens[i - 2];
            if (token3.type === 'NAME' && token3.value === 'define') {
              system.context.push(new Context.Name(token.value.slice(1, -1), 'const'));
            }
          }
        }
      }
    }
  };

}).call(this);
